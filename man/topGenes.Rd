% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_gene_rank.R
\docType{methods}
\name{topGenes}
\alias{topGenes}
\alias{topGenes,OmicsPathway-method}
\title{Rank the Top Genes from a Ranked Pathways Data Frame}
\usage{
topGenes(object, pVals_df, percentile = 0.05)

\S4method{topGenes}{OmicsPathway}(object, pVals_df, percentile = 0.05)
}
\arguments{
\item{object}{An object of class \code{OmicsSurv}, \code{OmicsReg}, or
\code{OmicsCateg}.}

\item{pVals_df}{The ranked pathways data frame returned by either the
\code{AESPCA_pVals} or \code{superPCA_pVals} functions.}

\item{percentile}{Return the most significant percent of the features
contained in all pathways. Defaults to 0.05.}
}
\value{
A named numeric vector. The names are the genes, and the values are
  the scores for those genes.
}
\description{
Given a supervised \code{Omics.*}-class object and a ranked
  pathways data frame returned by either the \code{\link{AESPCA_pVals}} or
  \code{\link{superPCA_pVals}} functions, rank the genes / proteins / lipids
  / metabolomes contained in each gene pathway by the weighted significance
  of their container pathways.
}
\details{
This function takes in the pathway set information in a valid
  \code{Omics*}-class object and a data frame of ranked pathways (as returned
  by one of the two \code{*PCA_pVals()} functions). This function creates a
  matrix with pathways as the columns and all genes included in those
  pathways as the rows: the \eqn{i, j} entry of the matrix equals 1 if gene
  \eqn{i} is an element of pathway \eqn{j}. This is created after trimming
  the pathways to the assay data frame supplied using the
  \code{\link{expressedOmes}} function). The \code{topGenes} function then
  multiplies each pathway membership indicator column by the negative natural
  logarithm of the adjusted \eqn{p}-values for that pathway; if multiple FDR
  adjustment methods are used, then the score is the average of each negative
  logged \eqn{p}-value. This function then returns a named numeric vector of
  the sums of these scores for each gene, sorted in descending order.
}
\examples{
  ###  Load the Example Data  ###
  data("colonSurv_df")
  data("colonGenesets_ls")

  ###  Create an OmicsSurv Object  ###
  colon_OmicsSurv <- create_OmicsSurv(assayData_df = colonSurv_df[, -(1:2)],
                                      pathwaySet_ls = colonGenesets_ls,
                                      eventTime_vec = colonSurv_df$OS_time,
                                      eventObserved_vec = as.logical(colonSurv_df$OS_event))

  ###  Extract PCs  ###
  surv_pVals_df <- superPCA_pVals(object = colon_OmicsSurv,
                                  parallel = TRUE,
                                  numCores = 2,
                                  adjustpValues = TRUE,
                                  adjustment = c("Hoch", "SidakSD"))

  ###  Rank Genes  ###
  topGenes(object = colon_OmicsSurv,
           pVals_df = surv_pVals_df)


}
