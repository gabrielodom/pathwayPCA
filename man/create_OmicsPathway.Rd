% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_Omics_All.R
\name{create_OmicsPath}
\alias{create_OmicsPath}
\alias{create_OmicsSurv}
\alias{create_OmicsReg}
\alias{create_OmicsCateg}
\title{Generation Functions for -Omics.* Class Objects}
\usage{
create_OmicsPath(massSpec_df, pathwaySet_ls)

create_OmicsSurv(massSpec_df, pathwaySet_ls, eventTime_vec, eventObserved_vec)

create_OmicsReg(massSpec_df, pathwaySet_ls, response_num)

create_OmicsCateg(massSpec_df, pathwaySet_ls, response_fact)
}
\arguments{
\item{massSpec_df}{An $N x p$ data frame with named columns}

\item{pathwaySet_ls}{A list of known gene pathways with one or two elements:
\itemize{
  \item{pathways : }{A named list of character vectors. Each vector contains
    the names of the individual genes within that pathway as a vector of
    character strings. The names contained in these vectors must have non-
    empty overlap with the \emph{column names} of the \code{massSpec} data
    frame. The names of the pathways (the list elements themselves) should
    be the a shorthand representation of the full pathway name.}
  \item{TERMS: }{ A character vector the same length as the
    \code{pathways} list with the proper names of the pathways.}
}}

\item{eventTime_vec}{A numeric vector with $N$ observations corresponding to
the last observed time of follow up}

\item{eventObserved_vec}{A logical vector with $N$ observations indicating
right censoring. The values will be FALSE if the observation was censored
(i.e., we did not observe an event).}

\item{response_num}{A numeric vector of length $N$: the dependent variable
in a regression exercise}

\item{response_fact}{A factor vector of length $N$: the dependent variable of a
generalized linear model}
}
\value{
An object of classes "OmicsPathway", "OmicsSurv", "OmicsReg", or
  "OmicsCateg".
}
\description{
These functions create valid objects of the "OmicsPathway", "OmicsSurv",
  "OmicsReg", and "OmicsCateg" classes.
}
\details{
Please note that the classes of the parameters are \emph{not}
  flexible. The -Omics measurement data \emph{must} be a data frame, and the
  response values (for the survival, regression, and classification object)
  \emph{must} match their expected classes \emph{exactly}. The reason for
  this is to force the end user to pay attention to the quality and format
  of their input data. Because the functions internal to this package have
  only been tested on the classes described in the Arguments section, these
  class checks prevent unexpected errors (or worse, incorrect computational
  results without an error). These draconian input class restrictions
  protect the accuracy of your data's analysis.
}
\section{OmicsPathway}{

Valid OmicsPathawy objects will have no response information, just the mass
  spectrometry (gene "design") matrix and the pathway list. OmicsPathway
  objects should be created only when unsupervised pathway extraction is
  needed. Because of the missing response, no pathway testing can be
  performed on an OmicsPathway object.
}

\section{OmicsSurv}{

Valid OmicsSurv objects will have two response vectors: a vector of the most
  recently recorded follow-up times and a logical vector if that time marks
  an event (TRUE = observed event; FALSE = right-censored observation).
}

\section{OmicsReg and OmicsCateg}{

Valid OmicsReg and OmicsCateg objects with have one response vector of
  continuous or categorial (as a factor) observations, respectively.
}

\examples{
  ###  Load the Example Data  ###
  data("colonSurv_df")
  data("colonGenesets_ls")

  ###  Create an OmicsPathway Object  ###
  colon_OmicsPath <- create_OmicsPath(massSpec_df = colonSurv_df[, -(1:2)],
                                      pathwaySet_ls = colonGenesets_ls)

  ###  Create an OmicsSurv Object  ###
  colon_OmicsSurv <- create_OmicsSurv(massSpec_df = colonSurv_df[, -(1:2)],
                                      pathwaySet_ls = colonGenesets_ls,
                                      eventTime_vec = colonSurv_df$OS_time,
                                      eventObserved_vec = as.logical(colonSurv_df$OS_event))

  ###  Create an OmicsReg Object  ###
  colon_OmicsReg <- create_OmicsReg(massSpec_df = colonSurv_df[, -(1:2)],
                                    pathwaySet_ls = colonGenesets_ls,
                                    response_num = colonSurv_df$OS_time)

  ###  Create an OmicsCateg Object  ###
  colon_OmicsCateg <- create_OmicsCateg(massSpec_df = colonSurv_df[, -(1:2)],
                                        pathwaySet_ls = colonGenesets_ls,
                                        response_fact = as.factor(colonSurv_df$OS_event))


}
\seealso{
\code{"\link[=OmicsPathway-class]{OmicsPathway}"},
  \code{"\link[=OmicsSurv-class]{OmicsSurv}"},
  \code{"\link[=OmicsReg-class]{OmicsReg}"},  and
  \code{"\link[=OmicsCateg-class]{OmicsCateg}"}
}
